substitutions:
  name: esp32-water
  friendly_name: "Water Systems"
  area: "Laundry"
  ip_addr: 192.168.4.21
  board: "featheresp32"

esp32:
  board: ${board}
  framework:
    type: arduino

packages:
  basic: !include common/basic.yaml
    
sensor:
  - platform: ultrasonic
    trigger_pin: 13
    echo_pin: 27
    name: "Brine Tank Level (Primary)"
    # 40" / 102 cm tall
    # Water level when salt is empty is 5"    
    id: brine_tank_primary
    unit_of_measurement : "%"
    state_class: "measurement"
    icon: "mdi:cup-water"
    update_interval: 1min
    expire_after: 24h
    accuracy_decimals: 0
    filters:
      - lambda: |-
          const float TANK_HEIGHT_CM = 102.0;  // Replace with the actual height of your tank in cm
          const float MIN_WATER_LEVEL_CM = 12.0; // Minimum water level when the tank is empty
          const float MAX_SALT_LEVEL_GAP_CM = 10.0; // Gap between sensor and top of salt when tank is full
          float distance_m = x;
          float distance_cm = distance_m * 100.0;

          ESP_LOGD("salt_level", "Measured distance: %.1f cm", distance_cm);

          if (distance_cm > TANK_HEIGHT_CM) {
            ESP_LOGW("salt_level", "Distance measurement exceeds tank height. Check sensor placement.");
            return 0.0;
          }

          float effective_height = TANK_HEIGHT_CM - MIN_WATER_LEVEL_CM - MAX_SALT_LEVEL_GAP_CM;
          float salt_level = ((effective_height - (distance_cm - MIN_WATER_LEVEL_CM)) / effective_height) * 100.0;

          if (salt_level < 0) {
            salt_level = 0;
          } else if (salt_level > 100) {
            salt_level = 100;
          }

          ESP_LOGD("salt_level", "Calculated salt level: %.1f%%", salt_level);

          return salt_level;
      - filter_out: nan
      - quantile:
          window_size: 480
          send_every: 240
          send_first_at: 1
          quantile: .9

  - platform: ultrasonic
    trigger_pin: 14
    echo_pin: 15
    name: "Brine Tank Level (Secondary)"
    # 33" / 84 cm tall
    # Water level when salt is empty is 5"
    id: brine_tank_secondary
    unit_of_measurement : "%"
    state_class: "measurement"
    icon: "mdi:cup-water"
    update_interval: 1min
    expire_after: 24h
    accuracy_decimals: 0
    filters:
      - lambda: |-
          const float TANK_HEIGHT_CM = 84.0;  // Replace with the actual height of your tank in cm
          const float MIN_WATER_LEVEL_CM = 12.0; // Minimum water level when the tank is empty
          const float MAX_SALT_LEVEL_GAP_CM = 10.0; // Gap between sensor and top of salt when tank is full
          float distance_m = x;
          float distance_cm = distance_m * 100.0;

          ESP_LOGD("salt_level", "Measured distance: %.1f cm", distance_cm);

          if (distance_cm > TANK_HEIGHT_CM) {
            ESP_LOGW("salt_level", "Distance measurement exceeds tank height. Check sensor placement.");
            return 0.0;
          }

          float effective_height = TANK_HEIGHT_CM - MIN_WATER_LEVEL_CM - MAX_SALT_LEVEL_GAP_CM;
          float salt_level = ((effective_height - (distance_cm - MIN_WATER_LEVEL_CM)) / effective_height) * 100.0;

          if (salt_level < 0) {
            salt_level = 0;
          } else if (salt_level > 100) {
            salt_level = 100;
          }

          ESP_LOGD("salt_level", "Calculated salt level: %.1f%%", salt_level);

          return salt_level;
      - filter_out: nan
      - quantile:
          window_size: 480
          send_every: 240
          send_first_at: 1
          quantile: .9
          
  - platform: mqtt_subscribe
    name: "Injection Pump"
    id: injection_pump_mqtt
    topic: irrigation/injection_pump

switch:
  - platform: gpio
    pin: A0
    name: "Injection Pump Relay"
    id: injection_pump_relay
    inverted: no
    restore_mode: ALWAYS_OFF