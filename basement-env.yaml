substitutions:
  name: esp32-basement-env
  area: "Basement"
  friendly_name: "Basement Env Sensors"
  ip_addr: 192.168.5.114
  board: featheresp32

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  area: ${area}

esp32:
  board: ${board}
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pwd
  fast_connect: False
  reboot_timeout: 15min
  domain: !secret domain
  manual_ip:
    static_ip: ${ip_addr}
    gateway: !secret gateway
    subnet: !secret subnet
    dns1: !secret dns_server

  ap:
    ssid: "${name}"
    password: !secret fallback_ap_pwd

time:
  - platform: sntp
    id: sntp_time
    timezone: !secret timezone
    servers: !secret ntp_server

mqtt:
  broker: !secret mqtt_broker
  topic_prefix: esphome/devices/${name}
  birth_message:
    topic: esphome/availability/${name}
    payload: online
  will_message:
    topic: esphome/availability/${name}
    payload: offline

# #######################################
debug:
  update_interval: 5s

logger:
  level: debug
  on_message:
    - level: ERROR
      then:
        - mqtt.publish:
            retain: false
            qos: 1
            topic: esphome/device_logs/${name}/error
            payload: !lambda |-
              return "Triggered on_message with level " + to_string(level) + ", tag " + tag + " and message " + message;
    - level: WARN
      then:
        - mqtt.publish:
            retain: false
            qos: 1          
            topic: esphome/device_logs/${name}/warning
            payload: !lambda |-
              return "Triggered on_message with level " + to_string(level) + ", tag " + tag + " and message " + message;

api:

ota:
# #######################################

switch:
  - platform: restart
    name: "Restart"
  - platform: shutdown
    name: "Shutdown"    

button:
  - platform: safe_mode
    name: "Safe Mode Boot"
    entity_category: diagnostic

  - platform: template
    name: "Clean Sensor"
    on_press:
      then:
        - sps30.start_fan_autoclean: sps30_basement

binary_sensor:
  - platform: status
    name: "Status"

i2c:
  scan: True
  id: bus_b

sensor:
  - platform: wifi_signal
    name: "Wifi Signal"
    update_interval: 1min
    force_update: true
    expire_after: 60min
    filters:
      - median:
          window_size: 241
          send_every: 60
          send_first_at: 1

  - platform: uptime
    name: "Uptime"

  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"
    loop_time:
      name: "Loop Time"

  # 3.7V lithium cell discharge curve
  - platform: adc
    pin: A13
    name: "Battery Level"
    #icon: "mdi:battery"
    unit_of_measurement: "%"
    state_class: "measurement"
    device_class: "battery"
    expire_after: 60s
    attenuation: 11db
    update_interval: 1s
    accuracy_decimals: 0
    filters:
      - calibrate_polynomial:
         degree: 2
         datapoints:        
          - 1.930293125 -> 99.61202716
          - 1.896664926 -> 97.47817653
          - 1.875055958 -> 95.3443259
          - 1.84865795 -> 91.6585839
          - 1.82948547 -> 86.80892338
          - 1.817503544 -> 83.70514064
          - 1.8103433 -> 79.43743938
          - 1.798401011 -> 73.03588749
          - 1.791252425 -> 67.79825412
          - 1.78412016 -> 61.20271581
          - 1.776990226 -> 54.41319108
          - 1.765094568 -> 44.13191077
          - 1.757971629 -> 36.76042677
          - 1.75086268 -> 28.22502425
          - 1.743735078 -> 21.24151309
          - 1.736563176 -> 17.94374394
          - 1.72459524 -> 13.67604268
          - 1.712613314 -> 10.57225994
          - 1.69341985 -> 7.468477207
          - 1.659800977 -> 4.558680892
          - 1.626170447 -> 2.618816683
      - lambda: !lambda "return int(x);"
      - clamp:
          max_value: 100
      - exponential_moving_average:
          alpha: 0.1
          send_every: 15
          send_first_at: 1
      - round: 0

  - platform: homeassistant
    id: basement_pm25_24hr
    internal: true
    entity_id: sensor.basement_pm25_24_hrs

# #########################################
  - platform: bme680
    temperature:
      name: "Temperature"
      oversampling: 16x
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1   
    pressure:
      name: "Pressure"
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1 
    humidity:
      id: "humidity"
      name: "Humidity"
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    gas_resistance:
      id: "gas_resistance"
      name: "Gas Resistance"
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1  
    address: 0x77
    update_interval: 1s

  - platform: scd30
    co2:
      name: "CO₂"
      id: co2
      accuracy_decimals: 1
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1   
    temperature:
      id: scd30_temp
      name: "SCD30 Temperature"
      accuracy_decimals: 0
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    humidity:
      id: scd30_humid
      name: "SCD30 Humidity"
      accuracy_decimals: 0
      force_update: true
      expire_after: 60min
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    address: 0x61
    update_interval: 1s

  - platform: sps30
    id: sps30_basement
    pm_1_0:
      name: "PM <1µm Weight concentration"
      id: "pm_1_0"
      expire_after: 8h
      force_update: true
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pm_2_5:
      name: "PM <2.5µm Weight concentration"
      id: "pm_2_5"
      expire_after: 8h
      force_update: true
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pm_4_0:
      name: "PM <4µm Weight concentration"
      id: "pm_4_0"
      expire_after: 8h
      force_update: true
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pm_10_0:
      name: "PM <10µm Weight concentration"
      id: "pm_10_0"
      expire_after: 8h
      force_update: true
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pmc_0_5:
      name: "PM <0.5µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_0_5"
      expire_after: 8h
      force_update: true
      state_class: "measurement"
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pmc_1_0:
      name: "PM <1µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_1_0"
      expire_after: 8h
      force_update: true
      state_class: "measurement"
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pmc_2_5:
      name: "PM <2.5µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_2_5"
      expire_after: 8h
      force_update: true
      state_class: "measurement"
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pmc_4_0:
      name: "PM <4µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_4_0"
      expire_after: 8h
      force_update: true
      state_class: "measurement"
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pmc_10_0:
      name: "PM <10µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_10_0"
      expire_after: 8h
      force_update: true
      state_class: "measurement"
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    pm_size:
      name: "Typical Particle size"
      id: "pm_size"
      expire_after: 8h
      force_update: true
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 300
            send_first_at: 1
    address: 0x69
    update_interval: 10s

  - platform: template
    name: "Indoor Air Quality"
    id: iaq
    icon: "mdi:gauge"
    expire_after: 60min
    # caulculation: comp_gas = log(R_gas[ohm]) + 0.04 log(Ohm)/%rh * hum[%rh]
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 *  id(humidity).state;

text_sensor:
  - platform: version
    name: "ESPHome Version"
    icon: "mdi:chip"

  - platform: debug
    device:
      name: "Device Info"
    reset_reason:
      name: "Reset Reason"

  - platform: template
    name: "PM25 Limits"
    icon: "mdi:virus"
    lambda: |-
      if (int(id(pm_2_5).state) < 5 && int(id(basement_pm25_24hr).state) < 15) {
        return {"Ok"};
      }
      else if (int(id(pm_2_5).state) >= 5 || int(id(basement_pm25_24hr).state) >= 15) {
        return {"Warning!"};
      }
      else {
        return {"unknown"};
      }

  - platform: template
    name: "PM10 Limits"
    icon: "mdi:virus"
    lambda: |-
      if (int(id(pm_10_0).state) < 54) {
        return {"Ok"};
      }
      else if (int(id(pm_10_0).state) >= 54) {
        return {"Warning!"};
      }
      else {
        return {"unknown"};
      }

  - platform: template
    name: "IAQ Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if (int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) <= 150) {
        return {"Lightly polluted"};
      }
      else if (int(id(iaq).state) <= 200) {
        return {"Moderately polluted"};
      }
      else if (int(id(iaq).state) <= 250) {
        return {"Heavily polluted"};
      }
      else if (int(id(iaq).state) <= 350) {
        return {"Severely polluted"};
      }
      else if (int(id(iaq).state) <= 500) {
        return {"Extremely polluted"};
      }
      else {
        return {"unknown"};
      }

  - platform: template
    name: "CO₂ Exposure Classification"
    icon: "mdi:checkbox-marked-circle-outline"
    lambda: |-
      if (int(id(co2).state) <= 400) {
        return {"Excellent"};
      }
      else if (int(id(co2).state) <= 1000) {
        return {"Fine"};
      }
      else if (int(id(co2).state) <= 1500) {
        return {"Moderate"};
      }
      else if (int(id(co2).state) <= 2000) {
        return {"Poor"};
      }
      else if (int(id(co2).state) <= 5000) {
        return {"Very Poor"};
      }
      else if (int(id(co2).state) > 5000) {
        return {"Severe"};
      }
      else {
        return {"unknown"};
      }