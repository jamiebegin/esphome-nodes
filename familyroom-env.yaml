# KeeYees ESP32S ESP32 Development Board 2.4 GHz Dual Core
# WLAN WiFi + Bluetooth 2-in-1 Microcontroller ESP-WROOM-32 
# Chip for Arduino (38PIN Narrow Version, 2PCS) 
# https://www.amazon.com/gp/product/B07QCP2451
# ***** Crappy board, don't buy more. ******

substitutions:
  name: esp32-familyroom-env
  friendly_name: "Family Room Env"
  ip_addr: 192.168.5.110
  board: nodemcu-32s

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false

esp32:
  board: ${board}
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pwd
  fast_connect: False
  reboot_timeout: 15min
  domain: !secret domain
  manual_ip:
    static_ip: ${ip_addr}
    gateway: !secret gateway
    subnet: !secret subnet
    dns1: !secret dns_server

  ap:
    ssid: "${name}"
    password: "E12bcaWpvNMD"

time:
  - platform: sntp
    id: sntp_time
    timezone: "America/Detroit"
    servers: !secret ntp_server

mqtt:
  broker: !secret mqtt_broker
  topic_prefix: esphome/devices/${name}
  birth_message:
    topic: esphome/availability/${name}
    payload: online
  will_message:
    topic: esphome/availability/${name}
    payload: offline  

# #######################################
logger:

api:
  password: ""

ota:
  password: ""
# #######################################

###############################

i2c:
  scan: True
  id: bus_a

# ######### Switches & Buttons  ##########
switch:
  - platform: restart
    name: "Restart"
  - platform: shutdown
    name: "Shutdown"

button:
  - platform: safe_mode
    name: "Safe Mode Boot"
    entity_category: diagnostic

  - platform: template
    name: "Clean Sensor"
    on_press:
      then:
        - sps30.start_fan_autoclean: sps30_fam

# ######### Sensors ##########
text_sensor:
  - platform: version
    name: "ESPHome Version"
    icon: "mdi:chip"

  - platform: template
    name: "PM25 Limits"
    icon: "mdi:virus"
    lambda: |-
      if (int(id(pm_2_5).state) < 5 && int(id(pm25_24hr).state) < 15) {
        return {"Ok"};
      }
      else if (int(id(pm_2_5).state) >= 5 || int(id(pm25_24hr).state) >= 15) {
        return {"Warning!"};
      }
      else {
        return {"unknown"};
      }
  - platform: template
    name: "PM10 Limits"
    icon: "mdi:virus"
    lambda: |-
      if (int(id(pm_10_0).state) < 54) {
        return {"Ok"};
      }
      else if (int(id(pm_10_0).state) >= 54) {
        return {"Warning!"};
      }
      else {
        return {"unknown"};
      }

binary_sensor:
  - platform: status
    name: "Status"

sensor:
  - platform: uptime
    name: Uptime
    expire_after: 30min

  - platform: wifi_signal
    name: "Wifi Signal"
    update_interval: 1min
    force_update: true
    expire_after: 60min
    filters:
      - median:
          window_size: 241
          send_every: 60
          send_first_at: 1

  # Grab the barometric pressure from the office sensor for CO2 calc
  #- platform: homeassistant
  #  id: baro_pressure
  #  entity_id: sensor.office_env_pressure
  #  filters:
  #    - lambda: return x * 68.9476; # Convert PSI to mBar

  - platform: homeassistant
    id: pm25_24hr
    internal: true
    entity_id: sensor.family_room_pm25_24_hrs

  - platform: scd30
    co2:
      name: "CO₂"
      accuracy_decimals: 1
      force_update: true
      expire_after: 60min
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1       
    temperature:
      id: temp
      name: "Temperature"
      accuracy_decimals: 0
      force_update: true
      expire_after: 60min
      filters:
        #- offset: -3.4
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
       # - calibrate_linear:
       #     method: least_squares
       #     datapoints:
       #     # Map 0.0 (from sensor) to 1.0 (true value)
       #       - 0.0 -> 1.0
       #       - 10.0 -> 12.1    
    humidity:
      id: humid
      name: "Humidity"
      accuracy_decimals: 0
      force_update: true
      expire_after: 60min
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    temperature_offset: 3.4 °C
    ambient_pressure_compensation: 0.983
    altitude_compensation: 262m
    address: 0x61
    update_interval: 1s

  - platform: sgp30
    eco2:
      name: "eCO2"
      accuracy_decimals: 1
      expire_after: 8h
      force_update: true      
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    tvoc:
      name: "TVOC"
      accuracy_decimals: 1
      expire_after: 8h
      force_update: true      
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    compensation:
      temperature_source: temp
      humidity_source: humid      
    address: 0x58
    update_interval: 1s

  - platform: sps30
    id: sps30_fam
    pm_1_0:
      name: "PM <1µm Weight concentration"
      id: "pm_1_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pm_2_5:
      name: "PM <2.5µm Weight concentration"
      id: "pm_2_5"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pm_4_0:
      name: "PM <4µm Weight concentration"
      id: "pm_4_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pm_10_0:
      name: "PM <10µm Weight concentration"
      id: "pm_10_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pmc_0_5:
      name: "PM <0.5µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_0_5"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pmc_1_0:
      name: "PM <1µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_1_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pmc_2_5:
      name: "PM <2.5µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_2_5"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pmc_4_0:
      name: "PM <4µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_4_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pmc_10_0:
      name: "PM <10µm Number concentration"
      unit_of_measurement: "qty/cm³"
      id: "pmc_10_0"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    pm_size:
      name: "Typical Particle size"
      id: "pm_size"
      expire_after: 8h
      force_update: true
      filters:
        - median:
            window_size: 601
            send_every: 300
            send_first_at: 1
    address: 0x69
    update_interval: 10s
